group 'rfx'
version '1.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 11 

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile (
    		//rfx-core
  			'io.vertx:vertx-core:3.8.5'	
			,'com.google.code.gson:gson:2.8.2'
			,'org.jsoup:jsoup:1.14.3'								
			,'org.apache.commons:commons-lang3:3.3.2'
			,'commons-net:commons-net:3.6'    		
			,'commons-io:commons-io:2.5'
			,'redis.clients:jedis:2.10.2'
			,'org.apache.httpcomponents:httpclient:4.5.13'
			,'com.google.guava:guava:23.6.1-jre' 
			,'org.yaml:snakeyaml:1.18'
			,'org.slf4j:slf4j-api:1.7.36'
			,'org.slf4j:slf4j-simple:1.7.36'      
			,'javax.activation:activation:1.1.1'
			
			,'rfx:rfx-core:1.0'
            ,'rfx:rfx-data-util:1.0'	
            ,'com.typesafe.akka:akka-actor_2.10:2.3.11'
    		
    		//rfx-stream
    		,'commons-dbcp:commons-dbcp:1.4'
    		,'commons-io:commons-io:2.4'
    		,'org.apache.commons:commons-math3:3.4.1'    		
    		,'org.apache.kafka:kafka_2.10:0.8.2.2'    		
    		,'org.yaml:snakeyaml:1.18'   
    		,'org.mongodb:mongo-java-driver:3.4.2'
            ,'org.mongodb.morphia:morphia:1.3.2'
    		 
    		,'org.codehaus.groovy:groovy:2.3.9'
    		
    		)
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

ext.rfxStreamManifest = manifest {
   attributes ('Implementation-Title': 'rfx.stream.core.library', 
        			'Implementation-Version': version ,
        			'Main-Class': '.',
        			'Class-Path' : '.' )
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

task printClasspathStringJars << {   
    println getClasspathStringJars()
}

def getClasspathStringJars() {
	def baseFolder = 'deps/'
    def fileNames = []
    configurations.compile.each { File file -> fileNames.add(baseFolder + file.name) }
    
    def classpath = fileNames.join(" ; ")    
    return '. ; ' + classpath + ' ; '
}

task rfxCopyRuntimeLibs(type: Copy) {  
  into "build/libs/deps"  
  from configurations.compile  
}

task rfxCopyConfigs(type: Copy) {  
  into "build/libs/configs"  
  from files('configs')
}

task rfxCopyToRelease(type: Copy) {
    from('build/libs')
    into('../releases/rfx-stream')
    include('**')
}

task rfxStreamJar(type: Jar) {	
	dependsOn classes
    from(sourceSets.main.output) {
        include "**"
    }
    version = ''
    baseName = 'rfx-stream'
    manifest = project.manifest {
        from rfxStreamManifest
    }
}

jar {
	dependsOn classes
    from(sourceSets.main.output) {
        include "**"
    }
    baseName = 'rfx-stream'
    manifest = project.manifest {
        from rfxStreamManifest
    }
}

task sampleTrackingItemWorker(type: Jar) {	
	dependsOn classes   
    from(sourceSets.test.output) {
        include "**"
    }  
    version = '1.0'
    baseName = 'tracking-item-worker'
    manifest {
   		attributes ('Implementation-Title': 'TrackingItemWorker', 
        			'Implementation-Version': version ,
        			'Main-Class': 'rfx.sample.item.tracking.TrackingItemWorker',
        			'Class-Path' : getClasspathStringJars() + ' ./rfx-stream-1.0.jar ; ' )
	}
}
